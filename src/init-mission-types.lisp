(in-package :cotd)

;;----------------------------------------
;; MISSION-TYPES
;;----------------------------------------

(set-mission-type :id +mission-type-demonic-attack+
                  :name "Demonic attack"
                  :is-available-func #'(lambda (world-map x y)
                                         (let ((near-demons nil))
                                           (check-surroundings x y nil #'(lambda (dx dy)
                                                                           (when (and (>= dx 0) (>= dy 0)
                                                                                      (< dx (array-dimension (cells world-map) 0))
                                                                                      (< dy (array-dimension (cells world-map) 1))
                                                                                      (or (= (controlled-by (aref (cells world-map) dx dy)) +lm-controlled-by-demons+)
                                                                                          (= (wtype (aref (cells world-map) dx dy)) +world-sector-corrupted-forest+)
                                                                                          (= (wtype (aref (cells world-map) dx dy)) +world-sector-corrupted-port+)
                                                                                          (= (wtype (aref (cells world-map) dx dy)) +world-sector-corrupted-residential+)
                                                                                          (= (wtype (aref (cells world-map) dx dy)) +world-sector-corrupted-lake+)))
                                                                             (setf near-demons t))))
                                           (if (and near-demons
                                                    (or (= (wtype (aref (cells world-map) x y)) +world-sector-normal-forest+)
                                                        (= (wtype (aref (cells world-map) x y)) +world-sector-normal-port+)
                                                        (= (wtype (aref (cells world-map) x y)) +world-sector-normal-residential+)
                                                        (= (wtype (aref (cells world-map) x y)) +world-sector-normal-lake+)))
                                             t
                                             nil)))
                  :faction-list-func #'(lambda (world-sector)
                                         (let ((faction-list (list (list +faction-type-demons+ +mission-faction-present+)
                                                                   (list +faction-type-angels+ +mission-faction-present+)
                                                                   (list +faction-type-angels+ +mission-faction-delayed+)
                                                                   (list +faction-type-angels+ +mission-faction-absent+)
                                                                   )))
                                           (if (= (controlled-by world-sector) +lm-controlled-by-military+)
                                             (push (list +faction-type-military+ +mission-faction-present+) faction-list)
                                             (push (list +faction-type-military+ +mission-faction-delayed+) faction-list))
                                           faction-list))
                  :overall-post-process-func-list #'(lambda ()
                                                      (let ((func-list ()))
                                                        ;; update visibility for all added mobs
                                                        (push #'(lambda (level world-sector mission world)
                                                                  (declare (ignore world-sector mission world))

                                                                  (format t "OVERALL-POST-PROCESS-FUNC: Update visibility~%~%")
                                                                  
                                                                  (loop for mob-id in (mob-id-list level)
                                                                        for mob = (get-mob-by-id mob-id)
                                                                        do
                                                                           (update-visible-mobs mob)))
                                                              func-list)
                                                        
                                                        ;; remove all starting features
                                                        (push #'(lambda (level world-sector mission world)
                                                                  (declare (ignore world-sector mission world))

                                                                  (format t "OVERALL-POST-PROCESS-FUNC: Remove dungeon generation features~%~%")
                                                                  
                                                                  (loop for feature-id in (feature-id-list level)
                                                                        for lvl-feature = (get-feature-by-id feature-id)
                                                                        when (get-feature-type-trait lvl-feature +feature-trait-remove-on-dungeon-generation+)
                                                                          do
                                                                             (remove-feature-from-level-list level lvl-feature)))
                                                              func-list)
                                                                  
                                                        ;; create delayed points from respective features
                                                        (push #'(lambda (level world-sector mission world)
                                                                  (declare (ignore world-sector mission world))

                                                                  (loop for feature-id in (feature-id-list level)
                                                                        for lvl-feature = (get-feature-by-id feature-id)
                                                                        for x = (x lvl-feature)
                                                                        for y = (y lvl-feature)
                                                                        for z = (z lvl-feature)
                                                                        when (= (feature-type lvl-feature) +feature-delayed-military-arrival-point+)
                                                                          do
                                                                             (when (and (get-terrain-type-trait (get-terrain-* level x y z) +terrain-trait-opaque-floor+)
                                                                                        (not (get-terrain-type-trait (get-terrain-* level x y z) +terrain-trait-blocks-move+)))
                                                                               (push (list x y z) (delayed-military-arrival-points level)))
                                                                        when (= feature-id +feature-delayed-angels-arrival-point+)
                                                                          do
                                                                             (when (and (get-terrain-type-trait (get-terrain-* level x y z) +terrain-trait-opaque-floor+)
                                                                                        (not (get-terrain-type-trait (get-terrain-* level x y z) +terrain-trait-blocks-move+)))
                                                                               (push (list x y z) (delayed-angels-arrival-points level)))))
                                                              func-list)    

                                                        ;; adjust coordinates of all horses to their riders, otherwise all horses created for scouts will have coords of (0, 0)
                                                        (push #'(lambda (level world-sector mission world)
                                                                  (declare (ignore world-sector mission world))

                                                                  (loop for mob-id in (mob-id-list level)
                                                                        for horse = (get-mob-by-id mob-id)
                                                                        for rider = (if (mounted-by-mob-id horse)
                                                                                      (get-mob-by-id (mounted-by-mob-id horse))
                                                                                      nil)
                                                                        when rider
                                                                          do
                                                                             (setf (x horse) (x rider) (y horse) (y rider) (z horse) (z rider)))
                                                                  ;; remove the glitch from (0, 0, 0)
                                                                  ;;(setf (aref (mobs (level world)) 0 0 0) nil)
                                                                  )
                                                              func-list)
                                                        
                                                        ;; place 1 thief
                                                        (push #'(lambda (level world-sector mission world)
                                                                  (declare (ignore world-sector world))

                                                                  (when (and (/= (player-lvl-mod-placement-id mission) +specific-faction-type-thief+)
                                                                             (find-if #'(lambda (a)
                                                                                          (if (and (= (first a) +faction-type-criminals+)
                                                                                                   (= (second a) +mission-faction-present+))
                                                                                            t
                                                                                            nil))
                                                                                      (faction-list mission)))
                                                                    (populate-level-with-mobs level (list (list +mob-type-thief+ 1 nil))
                                                                                              #'find-unoccupied-place-on-top))
                                                                  )
                                                              func-list)
                                                                  
                                                        ;; place 1 eater of the dead
                                                        (push #'(lambda (level world-sector mission world)
                                                                  (declare (ignore world-sector world))

                                                                  (when (and (/= (player-lvl-mod-placement-id mission) +lm-placement-eater+)
                                                                             (/= (player-lvl-mod-placement-id mission) +lm-placement-skinchanger+)
                                                                             (find-if #'(lambda (a)
                                                                                          (if (and (= (first a) +faction-type-eater+)
                                                                                                   (= (second a) +mission-faction-present+))
                                                                                            t
                                                                                            nil))
                                                                                      (faction-list mission)))
                                                                    (populate-level-with-mobs level (if (zerop (random 2))
                                                                                                      (list (list +mob-type-eater-of-the-dead+ 1 nil))
                                                                                                      (list (list +mob-type-skinchanger-melee+ 1 nil)))
                                                                                              #'find-unoccupied-place-water))
                                                                  )
                                                              func-list)
                                                        
                                                        ;; place 1 ghost
                                                        (push #'(lambda (level world-sector mission world)
                                                                  (declare (ignore world-sector world))

                                                                  (when (and (/= (player-lvl-mod-placement-id mission) +lm-placement-ghost+)
                                                                             (find-if #'(lambda (a)
                                                                                          (if (and (= (first a) +faction-type-ghost+)
                                                                                                   (= (second a) +mission-faction-present+))
                                                                                            t
                                                                                            nil))
                                                                                      (faction-list mission)))
                                                                    (populate-level-with-mobs level (list (list +mob-type-ghost+ 1 nil))
                                                                                              #'find-unoccupied-place-inside))
                                                                  )
                                                              func-list)
                                                        
                                                        ;; add military
                                                        (push #'(lambda (level world-sector mission world)
                                                                  
                                                                  (let ((military-list (list (list (list +mob-type-chaplain+ 1 nil)
                                                                                                   (list +mob-type-sergeant+ 1 nil)
                                                                                                   (list +mob-type-scout+ 1 nil)
                                                                                                   (list +mob-type-soldier+ 3 nil)
                                                                                                   (list +mob-type-gunner+ 1 nil))
                                                                                             (list (list +mob-type-chaplain+ 1 nil)
                                                                                                   (list +mob-type-sergeant+ 1 nil)
                                                                                                   (list +mob-type-scout+ 1 nil)
                                                                                                   (list +mob-type-soldier+ 3 nil)
                                                                                                   (list +mob-type-gunner+ 1 nil))
                                                                                             (list (list +mob-type-chaplain+ 1 nil)
                                                                                                   (list +mob-type-sergeant+ 1 nil)
                                                                                                   (list +mob-type-scout+ 1 nil)
                                                                                                   (list +mob-type-soldier+ 3 nil)
                                                                                                   (list +mob-type-gunner+ 1 nil)))))
                                                                    
                                                                    (place-military-on-level level world-sector mission world military-list t))
                                                                  )
                                                              func-list)
                                                                                                                
                                                        ;; place angels
                                                        (push #'(lambda (level world-sector mission world)
                                                                  
                                                                  (let ((angel-list (list (list +mob-type-angel+ *min-angels-number* nil))))
                                                                    
                                                                    (when (/= (player-lvl-mod-placement-id mission) +lm-placement-angel-trinity+)
                                                                        (push (list +mob-type-star-singer+ 1 nil) angel-list))
                                                                      
                                                                    (place-angels-on-level level world-sector mission world angel-list)))
                                                              func-list)
                                                        
                                                        ;; place demons
                                                        (push #'(lambda (level world-sector mission world)
                                                                  (multiple-value-bind (year month day hour min sec) (get-current-date-time (world-game-time world))
                                                                    (declare (ignore year month day min sec))
                                                                    (let ((demon-list (if (and (>= hour 7) (< hour 19))
                                                                                        (list (list +mob-type-archdemon+ 1 nil)
                                                                                              (list +mob-type-demon+ 15 nil)
                                                                                              (list +mob-type-imp+ *min-imps-number* nil))
                                                                                        (list (if (zerop (random 2))
                                                                                                (list +mob-type-archdemon+ 1 nil)
                                                                                                (list +mob-type-shadow-devil+ 1 nil))
                                                                                              (list +mob-type-demon+ 7 nil)
                                                                                              (list +mob-type-shadow-demon+ 8 nil)
                                                                                              (list +mob-type-imp+ (truncate *min-imps-number* 2) nil)
                                                                                              (list +mob-type-shadow-imp+ (truncate *min-imps-number* 2) nil)))))
                                                                      (when (/= (player-lvl-mod-placement-id mission) +lm-placement-demon-malseraph+)
                                                                        (push (list +mob-type-malseraph-puppet+ 1 nil) demon-list))
                                                                      
                                                                      (place-demons-on-level level world-sector mission world demon-list))))
                                                              func-list)

                                                        func-list))
                  :scenario-faction-list (list (list +specific-faction-type-player+ +lm-placement-player+)
                                               (list +specific-faction-type-dead-player+ +lm-placement-dead-player+)
                                               (list +specific-faction-type-angel-chrome+ +lm-placement-angel-chrome+)
                                               (list +specific-faction-type-angel-trinity+ +lm-placement-angel-trinity+)
                                               (list +specific-faction-type-demon-crimson+ +lm-placement-demon-crimson+)
                                               (list +specific-faction-type-demon-shadow+ +lm-placement-demon-shadow+)
                                               (list +specific-faction-type-demon-malseraph+ +lm-placement-demon-malseraph+)
                                               (list +specific-faction-type-military-chaplain+ +lm-placement-military-chaplain+)
                                               (list +specific-faction-type-military-scout+ +lm-placement-military-scout+)
                                               (list +specific-faction-type-priest+ +lm-placement-priest+)
                                               (list +specific-faction-type-satanist+ +lm-placement-satanist+)
                                               (list +specific-faction-type-eater+ +lm-placement-eater+)
                                               (list +specific-faction-type-skinchanger+ +lm-placement-skinchanger+)
                                               (list +specific-faction-type-thief+ +lm-placement-thief+)
                                               (list +specific-faction-type-ghost+ +lm-placement-ghost+)
                                               )
                  :ai-package-list (list (list +faction-type-demons+ (list +ai-package-patrol-district+))
                                         (list +faction-type-angels+ (list +ai-package-patrol-district+))
                                         (list +faction-type-military+ (list +ai-package-patrol-district+))
                                         (list +faction-type-church+ (list +ai-package-patrol-district+))
                                         (list +faction-type-satanists+ (list +ai-package-patrol-district+))
                                         (list +faction-type-eater+ (list +ai-package-patrol-district+))
                                         (list +faction-type-criminals+ (list +ai-package-patrol-district+))
                                         (list +faction-type-ghost+ (list +ai-package-patrol-district+))
                                         )
                  :win-condition-list (list (list +faction-type-demons+ +game-event-demon-attack-win-for-demons+)
                                            (list +faction-type-angels+ +game-event-demon-attack-win-for-angels+)
                                            (list +faction-type-military+ +game-event-demon-attack-win-for-military+)
                                            (list +faction-type-church+ +game-event-demon-attack-win-for-church+)
                                            (list +faction-type-satanists+ +game-event-demon-attack-win-for-satanists+)
                                            (list +faction-type-eater+ +game-event-win-for-eater+)
                                            (list +faction-type-criminals+ +game-event-win-for-thief+)
                                            (list +faction-type-ghost+ +game-event-win-for-ghost+)
                                            )
                  )

(set-mission-type :id +mission-type-demonic-raid+
                  :name "Demonic raid"
                  :is-available-func #'(lambda (world-map x y)
                                         (if (or (= (wtype (aref (cells world-map) x y)) +world-sector-normal-forest+)
                                                 (= (wtype (aref (cells world-map) x y)) +world-sector-normal-port+)
                                                 (= (wtype (aref (cells world-map) x y)) +world-sector-normal-island+)
                                                 (= (wtype (aref (cells world-map) x y)) +world-sector-normal-residential+)
                                                 (= (wtype (aref (cells world-map) x y)) +world-sector-normal-lake+))
                                           t
                                           nil))
                  :faction-list-func #'(lambda (world-sector)
                                         (let ((faction-list (list (list +faction-type-demons+ +mission-faction-present+)
                                                                   (list +faction-type-angels+ +mission-faction-present+)
                                                                   (list +faction-type-angels+ +mission-faction-delayed+)
                                                                   (list +faction-type-angels+ +mission-faction-absent+)
                                                                   )))
                                           (if (= (controlled-by world-sector) +lm-controlled-by-military+)
                                             (push (list +faction-type-military+ +mission-faction-present+) faction-list)
                                             (push (list +faction-type-military+ +mission-faction-delayed+) faction-list))
                                           faction-list)))

(set-mission-type :id +mission-type-demonic-conquest+
                  :name "Demonic conquest"
                  :is-available-func #'(lambda (world-map x y)
                                         (if (or (= (wtype (aref (cells world-map) x y)) +world-sector-normal-forest+)
                                                 (= (wtype (aref (cells world-map) x y)) +world-sector-normal-port+)
                                                 (= (wtype (aref (cells world-map) x y)) +world-sector-normal-island+)
                                                 (= (wtype (aref (cells world-map) x y)) +world-sector-normal-residential+)
                                                 (= (wtype (aref (cells world-map) x y)) +world-sector-normal-lake+)
                                                 (= (wtype (aref (cells world-map) x y)) +world-sector-abandoned-forest+)
                                                 (= (wtype (aref (cells world-map) x y)) +world-sector-abandoned-port+)
                                                 (= (wtype (aref (cells world-map) x y)) +world-sector-abandoned-island+)
                                                 (= (wtype (aref (cells world-map) x y)) +world-sector-abandoned-residential+)
                                                 (= (wtype (aref (cells world-map) x y)) +world-sector-abandoned-lake+))
                                           t
                                           nil))
                  :faction-list-func #'(lambda (world-sector)
                                         (let ((faction-list (list (list +faction-type-demons+ +mission-faction-present+)
                                                                   (list +faction-type-angels+ +mission-faction-present+)
                                                                   (list +faction-type-angels+ +mission-faction-delayed+)
                                                                   (list +faction-type-angels+ +mission-faction-absent+)
                                                                   )))
                                           (if (= (controlled-by world-sector) +lm-controlled-by-military+)
                                             (push (list +faction-type-military+ +mission-faction-present+) faction-list)
                                             (push (list +faction-type-military+ +mission-faction-delayed+) faction-list))
                                           faction-list)))

(set-mission-type :id +mission-type-demonic-thievery+
                  :name "Demonic thievery"
                  :is-available-func #'(lambda (world-map x y)
                                         (if (and (find :church (feats (aref (cells world-map) x y)) :key #'(lambda (a) (first a)))
                                                  (find +item-type-church-reliс+ (items (aref (cells world-map) x y))))
                                           t
                                           nil))
                  :faction-list-func #'(lambda (world-sector)
                                         (let ((faction-list (list (list +faction-type-demons+ +mission-faction-present+)
                                                                   (list +faction-type-angels+ +mission-faction-present+)
                                                                   (list +faction-type-angels+ +mission-faction-delayed+)
                                                                   (list +faction-type-angels+ +mission-faction-absent+)
                                                                   )))
                                           (if (= (controlled-by world-sector) +lm-controlled-by-military+)
                                             (push (list +faction-type-military+ +mission-faction-present+) faction-list)
                                             (push (list +faction-type-military+ +mission-faction-delayed+) faction-list))
                                           faction-list)))

(set-mission-type :id +mission-type-military-conquest+
                  :name "Military conquest"
                  :is-available-func #'(lambda (world-map x y)
                                         (let ((near-military nil))
                                           (check-surroundings x y nil #'(lambda (dx dy)
                                                                           (when (and (>= dx 0) (>= dy 0)
                                                                                      (< dx (array-dimension (cells world-map) 0))
                                                                                      (< dy (array-dimension (cells world-map) 1))
                                                                                      (= (controlled-by (aref (cells world-map) dx dy)) +lm-controlled-by-military+))
                                                                             (setf near-military t))))
                                           (if (and near-military
                                                    (or (= (wtype (aref (cells world-map) x y)) +world-sector-corrupted-forest+)
                                                        (= (wtype (aref (cells world-map) x y)) +world-sector-corrupted-port+)
                                                        (= (wtype (aref (cells world-map) x y)) +world-sector-corrupted-island+)
                                                        (= (wtype (aref (cells world-map) x y)) +world-sector-corrupted-residential+)
                                                        (= (wtype (aref (cells world-map) x y)) +world-sector-corrupted-lake+)
                                                        (= (wtype (aref (cells world-map) x y)) +world-sector-abandoned-forest+)
                                                        (= (wtype (aref (cells world-map) x y)) +world-sector-abandoned-port+)
                                                        (= (wtype (aref (cells world-map) x y)) +world-sector-abandoned-island+)
                                                        (= (wtype (aref (cells world-map) x y)) +world-sector-abandoned-residential+)
                                                        (= (wtype (aref (cells world-map) x y)) +world-sector-abandoned-lake+)))
                                             t
                                             nil)))
                  :faction-list-func #'(lambda (world-sector)
                                         (let ((faction-list (list (list +faction-type-military+ +mission-faction-present+)
                                                                   (list +faction-type-angels+ +mission-faction-present+)
                                                                   (list +faction-type-angels+ +mission-faction-delayed+)
                                                                   (list +faction-type-angels+ +mission-faction-absent+)
                                                                   )))
                                           (if (= (controlled-by world-sector) +lm-controlled-by-demons+)
                                             (push (list +faction-type-demons+ +mission-faction-present+) faction-list)
                                             (push (list +faction-type-demons+ +mission-faction-delayed+) faction-list)
                                             )
                                           faction-list)))

(set-mission-type :id +mission-type-military-raid+
                  :name "Military raid"
                  :is-available-func #'(lambda (world-map x y)
                                         (let ((near-military nil))
                                           (check-surroundings x y nil #'(lambda (dx dy)
                                                                           (when (and (>= dx 0) (>= dy 0)
                                                                                      (< dx (array-dimension (cells world-map) 0))
                                                                                      (< dy (array-dimension (cells world-map) 1))
                                                                                      (= (controlled-by (aref (cells world-map) dx dy)) +lm-controlled-by-military+))
                                                                             (setf near-military t))))
                                           (if (and near-military
                                                    (or (= (wtype (aref (cells world-map) x y)) +world-sector-corrupted-forest+)
                                                        (= (wtype (aref (cells world-map) x y)) +world-sector-corrupted-port+)
                                                        (= (wtype (aref (cells world-map) x y)) +world-sector-corrupted-island+)
                                                        (= (wtype (aref (cells world-map) x y)) +world-sector-corrupted-residential+)
                                                        (= (wtype (aref (cells world-map) x y)) +world-sector-corrupted-lake+)
                                                        (= (wtype (aref (cells world-map) x y)) +world-sector-abandoned-forest+)
                                                        (= (wtype (aref (cells world-map) x y)) +world-sector-abandoned-port+)
                                                        (= (wtype (aref (cells world-map) x y)) +world-sector-abandoned-island+)
                                                        (= (wtype (aref (cells world-map) x y)) +world-sector-abandoned-residential+)
                                                        (= (wtype (aref (cells world-map) x y)) +world-sector-abandoned-lake+)))
                                             t
                                             nil)))
                  :faction-list-func #'(lambda (world-sector)
                                         (let ((faction-list (list (list +faction-type-military+ +mission-faction-present+)
                                                                   (list +faction-type-angels+ +mission-faction-present+)
                                                                   (list +faction-type-angels+ +mission-faction-delayed+)
                                                                   (list +faction-type-angels+ +mission-faction-absent+)
                                                                   )))
                                           (if (= (controlled-by world-sector) +lm-controlled-by-demons+)
                                             (push (list +faction-type-demons+ +mission-faction-present+) faction-list)
                                             (push (list +faction-type-demons+ +mission-faction-delayed+) faction-list)
                                             )
                                           faction-list)))

(set-mission-type :id +mission-type-celestial-purge+
                  :name "Celestial purge"
                  :is-available-func #'(lambda (world-map x y)
                                         (if (or (= (wtype (aref (cells world-map) x y)) +world-sector-corrupted-forest+)
                                                 (= (wtype (aref (cells world-map) x y)) +world-sector-corrupted-port+)
                                                 (= (wtype (aref (cells world-map) x y)) +world-sector-corrupted-island+)
                                                 (= (wtype (aref (cells world-map) x y)) +world-sector-corrupted-residential+)
                                                 (= (wtype (aref (cells world-map) x y)) +world-sector-corrupted-lake+))
                                           t
                                           nil))
                  :faction-list-func #'(lambda (world-sector)
                                         (let ((faction-list (list (list +faction-type-angels+ +mission-faction-present+))))
                                           (if (= (controlled-by world-sector) +lm-controlled-by-demons+)
                                             (push (list +faction-type-demons+ +mission-faction-present+) faction-list)
                                             (push (list +faction-type-demons+ +mission-faction-delayed+) faction-list)
                                             )
                                           (if (= (controlled-by world-sector) +lm-controlled-by-military+)
                                             (push (list +faction-type-military+ +mission-faction-present+) faction-list)
                                             (push (list +faction-type-military+ +mission-faction-delayed+) faction-list)
                                             )
                                           faction-list)))

(set-mission-type :id +mission-type-celestial-retrieval+
                  :name "Celestial retrieval"
                  :is-available-func #'(lambda (world-map x y)
                                         (if (and (not (find :church (feats (aref (cells world-map) x y)) :key #'(lambda (a) (first a))))
                                                  (find +item-type-church-reliс+ (items (aref (cells world-map) x y))))
                                           t
                                           nil))
                  :faction-list-func #'(lambda (world-sector)
                                         (let ((faction-list (list (list +faction-type-angels+ +mission-faction-present+))))
                                           (if (= (controlled-by world-sector) +lm-controlled-by-demons+)
                                             (push (list +faction-type-demons+ +mission-faction-present+) faction-list)
                                             (push (list +faction-type-demons+ +mission-faction-delayed+) faction-list)
                                             )
                                           (if (= (controlled-by world-sector) +lm-controlled-by-military+)
                                             (push (list +faction-type-military+ +mission-faction-present+) faction-list)
                                             (push (list +faction-type-military+ +mission-faction-delayed+) faction-list)
                                             )
                                           faction-list)))

;;----------------------------------------
;; MISSION-DISTRICTS
;;----------------------------------------

(set-mission-district (make-instance 'mission-district :id +city-layout-normal+
                                                       :faction-list (list (list +faction-type-civilians+ +mission-faction-present+)
                                                                           (list +faction-type-church+ +mission-faction-present+)
                                                                           (list +faction-type-satanists+ +mission-faction-present+)
                                                                           (list +faction-type-satanists+ +mission-faction-absent+)
                                                                           (list +faction-type-eater+ +mission-faction-present+)
                                                                           (list +faction-type-eater+ +mission-faction-absent+)
                                                                           (list +faction-type-criminals+ +mission-faction-present+)
                                                                           (list +faction-type-criminals+ +mission-faction-absent+)
                                                                           (list +faction-type-ghost+ +mission-faction-present+)
                                                                           (list +faction-type-ghost+ +mission-faction-absent+))))

(set-mission-district (make-instance 'mission-district :id +city-layout-forest+
                                                       :faction-list (list (list +faction-type-civilians+ +mission-faction-present+)
                                                                           (list +faction-type-church+ +mission-faction-present+)
                                                                           (list +faction-type-satanists+ +mission-faction-present+)
                                                                           (list +faction-type-satanists+ +mission-faction-absent+)
                                                                           (list +faction-type-eater+ +mission-faction-present+)
                                                                           (list +faction-type-eater+ +mission-faction-absent+)
                                                                           (list +faction-type-criminals+ +mission-faction-present+)
                                                                           (list +faction-type-criminals+ +mission-faction-absent+)
                                                                           (list +faction-type-ghost+ +mission-faction-present+)
                                                                           (list +faction-type-ghost+ +mission-faction-absent+))))

(set-mission-district (make-instance 'mission-district :id +city-layout-port+
                                                       :faction-list (list (list +faction-type-civilians+ +mission-faction-present+)
                                                                           (list +faction-type-church+ +mission-faction-present+)
                                                                           (list +faction-type-satanists+ +mission-faction-present+)
                                                                           (list +faction-type-satanists+ +mission-faction-absent+)
                                                                           (list +faction-type-eater+ +mission-faction-present+)
                                                                           (list +faction-type-eater+ +mission-faction-absent+)
                                                                           (list +faction-type-criminals+ +mission-faction-present+)
                                                                           (list +faction-type-criminals+ +mission-faction-absent+)
                                                                           (list +faction-type-ghost+ +mission-faction-present+)
                                                                           (list +faction-type-ghost+ +mission-faction-absent+))))

(set-mission-district (make-instance 'mission-district :id +city-layout-island+
                                                       :faction-list (list (list +faction-type-civilians+ +mission-faction-present+)
                                                                           (list +faction-type-church+ +mission-faction-present+)
                                                                           (list +faction-type-satanists+ +mission-faction-present+)
                                                                           (list +faction-type-satanists+ +mission-faction-absent+)
                                                                           (list +faction-type-eater+ +mission-faction-present+)
                                                                           (list +faction-type-eater+ +mission-faction-absent+)
                                                                           (list +faction-type-criminals+ +mission-faction-present+)
                                                                           (list +faction-type-criminals+ +mission-faction-absent+)
                                                                           (list +faction-type-ghost+ +mission-faction-present+)
                                                                           (list +faction-type-ghost+ +mission-faction-absent+))))

(set-mission-district (make-instance 'mission-district :id +city-layout-river+
                                                       :faction-list (list (list +faction-type-civilians+ +mission-faction-present+)
                                                                           (list +faction-type-church+ +mission-faction-present+)
                                                                           (list +faction-type-satanists+ +mission-faction-present+)
                                                                           (list +faction-type-satanists+ +mission-faction-absent+)
                                                                           (list +faction-type-eater+ +mission-faction-present+)
                                                                           (list +faction-type-eater+ +mission-faction-absent+)
                                                                           (list +faction-type-criminals+ +mission-faction-present+)
                                                                           (list +faction-type-criminals+ +mission-faction-absent+)
                                                                           (list +faction-type-ghost+ +mission-faction-present+)
                                                                           (list +faction-type-ghost+ +mission-faction-absent+))))

(set-mission-district (make-instance 'mission-district :id +city-layout-barricaded-city+
                                                       :faction-list (list (list +faction-type-civilians+ +mission-faction-present+)
                                                                           (list +faction-type-church+ +mission-faction-present+)
                                                                           (list +faction-type-satanists+ +mission-faction-present+)
                                                                           (list +faction-type-satanists+ +mission-faction-absent+)
                                                                           (list +faction-type-eater+ +mission-faction-present+)
                                                                           (list +faction-type-eater+ +mission-faction-absent+)
                                                                           (list +faction-type-criminals+ +mission-faction-present+)
                                                                           (list +faction-type-criminals+ +mission-faction-absent+)
                                                                           (list +faction-type-ghost+ +mission-faction-present+)
                                                                           (list +faction-type-ghost+ +mission-faction-absent+))))

(set-mission-district (make-instance 'mission-district :id +city-layout-lake+
                                                       :faction-list (list (list +faction-type-civilians+ +mission-faction-present+)
                                                                           (list +faction-type-church+ +mission-faction-present+)
                                                                           (list +faction-type-satanists+ +mission-faction-present+)
                                                                           (list +faction-type-satanists+ +mission-faction-absent+)
                                                                           (list +faction-type-eater+ +mission-faction-present+)
                                                                           (list +faction-type-eater+ +mission-faction-absent+)
                                                                           (list +faction-type-criminals+ +mission-faction-present+)
                                                                           (list +faction-type-criminals+ +mission-faction-absent+)
                                                                           (list +faction-type-ghost+ +mission-faction-present+)
                                                                           (list +faction-type-ghost+ +mission-faction-absent+))))

(set-mission-district (make-instance 'mission-district :id +city-layout-lake-river+
                                                       :faction-list (list (list +faction-type-civilians+ +mission-faction-present+)
                                                                           (list +faction-type-church+ +mission-faction-present+)
                                                                           (list +faction-type-satanists+ +mission-faction-present+)
                                                                           (list +faction-type-satanists+ +mission-faction-absent+)
                                                                           (list +faction-type-eater+ +mission-faction-present+)
                                                                           (list +faction-type-eater+ +mission-faction-absent+)
                                                                           (list +faction-type-criminals+ +mission-faction-present+)
                                                                           (list +faction-type-criminals+ +mission-faction-absent+)
                                                                           (list +faction-type-ghost+ +mission-faction-present+)
                                                                           (list +faction-type-ghost+ +mission-faction-absent+))))

(set-mission-district (make-instance 'mission-district :id +city-layout-port-river+
                                                       :faction-list (list (list +faction-type-civilians+ +mission-faction-present+)
                                                                           (list +faction-type-church+ +mission-faction-present+)
                                                                           (list +faction-type-satanists+ +mission-faction-present+)
                                                                           (list +faction-type-satanists+ +mission-faction-absent+)
                                                                           (list +faction-type-eater+ +mission-faction-present+)
                                                                           (list +faction-type-eater+ +mission-faction-absent+)
                                                                           (list +faction-type-criminals+ +mission-faction-present+)
                                                                           (list +faction-type-criminals+ +mission-faction-absent+)
                                                                           (list +faction-type-ghost+ +mission-faction-present+)
                                                                           (list +faction-type-ghost+ +mission-faction-absent+))))

(set-mission-district (make-instance 'mission-district :id +city-layout-ruined-normal+
                                                       :faction-list (list (list +faction-type-civilians+ +mission-faction-absent+)
                                                                           (list +faction-type-church+ +mission-faction-absent+)
                                                                           (list +faction-type-satanists+ +mission-faction-absent+)
                                                                           (list +faction-type-eater+ +mission-faction-present+)
                                                                           (list +faction-type-eater+ +mission-faction-absent+)
                                                                           (list +faction-type-criminals+ +mission-faction-absent+)
                                                                           (list +faction-type-ghost+ +mission-faction-absent+))))

(set-mission-district (make-instance 'mission-district :id +city-layout-ruined-forest+
                                                       :faction-list (list (list +faction-type-civilians+ +mission-faction-absent+)
                                                                           (list +faction-type-church+ +mission-faction-absent+)
                                                                           (list +faction-type-satanists+ +mission-faction-absent+)
                                                                           (list +faction-type-eater+ +mission-faction-present+)
                                                                           (list +faction-type-eater+ +mission-faction-absent+)
                                                                           (list +faction-type-criminals+ +mission-faction-absent+)
                                                                           (list +faction-type-ghost+ +mission-faction-absent+))))

(set-mission-district (make-instance 'mission-district :id +city-layout-ruined-port+
                                                       :faction-list (list (list +faction-type-civilians+ +mission-faction-absent+)
                                                                           (list +faction-type-church+ +mission-faction-absent+)
                                                                           (list +faction-type-satanists+ +mission-faction-absent+)
                                                                           (list +faction-type-eater+ +mission-faction-present+)
                                                                           (list +faction-type-eater+ +mission-faction-absent+)
                                                                           (list +faction-type-criminals+ +mission-faction-absent+)
                                                                           (list +faction-type-ghost+ +mission-faction-absent+))))

(set-mission-district (make-instance 'mission-district :id +city-layout-ruined-island+
                                                       :faction-list (list (list +faction-type-civilians+ +mission-faction-absent+)
                                                                           (list +faction-type-church+ +mission-faction-absent+)
                                                                           (list +faction-type-satanists+ +mission-faction-absent+)
                                                                           (list +faction-type-eater+ +mission-faction-present+)
                                                                           (list +faction-type-eater+ +mission-faction-absent+)
                                                                           (list +faction-type-criminals+ +mission-faction-absent+)
                                                                           (list +faction-type-ghost+ +mission-faction-absent+))))

(set-mission-district (make-instance 'mission-district :id +city-layout-ruined-river+
                                                       :faction-list (list (list +faction-type-civilians+ +mission-faction-absent+)
                                                                           (list +faction-type-church+ +mission-faction-absent+)
                                                                           (list +faction-type-satanists+ +mission-faction-absent+)
                                                                           (list +faction-type-eater+ +mission-faction-present+)
                                                                           (list +faction-type-eater+ +mission-faction-absent+)
                                                                           (list +faction-type-criminals+ +mission-faction-absent+)
                                                                           (list +faction-type-ghost+ +mission-faction-absent+))))

(set-mission-district (make-instance 'mission-district :id +city-layout-ruined-lake+
                                                       :faction-list (list (list +faction-type-civilians+ +mission-faction-absent+)
                                                                           (list +faction-type-church+ +mission-faction-absent+)
                                                                           (list +faction-type-satanists+ +mission-faction-absent+)
                                                                           (list +faction-type-eater+ +mission-faction-present+)
                                                                           (list +faction-type-eater+ +mission-faction-absent+)
                                                                           (list +faction-type-criminals+ +mission-faction-absent+)
                                                                           (list +faction-type-ghost+ +mission-faction-absent+))))

(set-mission-district (make-instance 'mission-district :id +city-layout-ruined-lake-river+
                                                       :faction-list (list (list +faction-type-civilians+ +mission-faction-absent+)
                                                                           (list +faction-type-church+ +mission-faction-absent+)
                                                                           (list +faction-type-satanists+ +mission-faction-absent+)
                                                                           (list +faction-type-eater+ +mission-faction-present+)
                                                                           (list +faction-type-eater+ +mission-faction-absent+)
                                                                           (list +faction-type-criminals+ +mission-faction-absent+)
                                                                           (list +faction-type-ghost+ +mission-faction-absent+))))

(set-mission-district (make-instance 'mission-district :id +city-layout-ruined-port-river+
                                                       :faction-list (list (list +faction-type-civilians+ +mission-faction-absent+)
                                                                           (list +faction-type-church+ +mission-faction-absent+)
                                                                           (list +faction-type-satanists+ +mission-faction-absent+)
                                                                           (list +faction-type-eater+ +mission-faction-present+)
                                                                           (list +faction-type-eater+ +mission-faction-absent+)
                                                                           (list +faction-type-criminals+ +mission-faction-absent+)
                                                                           (list +faction-type-ghost+ +mission-faction-absent+))))

(set-mission-district (make-instance 'mission-district :id +city-layout-corrupted-normal+
                                                       :faction-list (list (list +faction-type-civilians+ +mission-faction-absent+)
                                                                           (list +faction-type-church+ +mission-faction-absent+)
                                                                           (list +faction-type-satanists+ +mission-faction-absent+)
                                                                           (list +faction-type-eater+ +mission-faction-present+)
                                                                           (list +faction-type-eater+ +mission-faction-absent+)
                                                                           (list +faction-type-criminals+ +mission-faction-absent+)
                                                                           (list +faction-type-ghost+ +mission-faction-absent+))))

(set-mission-district (make-instance 'mission-district :id +city-layout-corrupted-forest+
                                                       :faction-list (list (list +faction-type-civilians+ +mission-faction-absent+)
                                                                           (list +faction-type-church+ +mission-faction-absent+)
                                                                           (list +faction-type-satanists+ +mission-faction-absent+)
                                                                           (list +faction-type-eater+ +mission-faction-present+)
                                                                           (list +faction-type-eater+ +mission-faction-absent+)
                                                                           (list +faction-type-criminals+ +mission-faction-absent+)
                                                                           (list +faction-type-ghost+ +mission-faction-absent+))))

(set-mission-district (make-instance 'mission-district :id +city-layout-corrupted-port+
                                                       :faction-list (list (list +faction-type-civilians+ +mission-faction-absent+)
                                                                           (list +faction-type-church+ +mission-faction-absent+)
                                                                           (list +faction-type-satanists+ +mission-faction-absent+)
                                                                           (list +faction-type-eater+ +mission-faction-present+)
                                                                           (list +faction-type-eater+ +mission-faction-absent+)
                                                                           (list +faction-type-criminals+ +mission-faction-absent+)
                                                                           (list +faction-type-ghost+ +mission-faction-absent+))))

(set-mission-district (make-instance 'mission-district :id +city-layout-corrupted-island+
                                                       :faction-list (list (list +faction-type-civilians+ +mission-faction-absent+)
                                                                           (list +faction-type-church+ +mission-faction-absent+)
                                                                           (list +faction-type-satanists+ +mission-faction-absent+)
                                                                           (list +faction-type-eater+ +mission-faction-present+)
                                                                           (list +faction-type-eater+ +mission-faction-absent+)
                                                                           (list +faction-type-criminals+ +mission-faction-absent+)
                                                                           (list +faction-type-ghost+ +mission-faction-absent+))))

(set-mission-district (make-instance 'mission-district :id +city-layout-corrupted-river+
                                                       :faction-list (list (list +faction-type-civilians+ +mission-faction-absent+)
                                                                           (list +faction-type-church+ +mission-faction-absent+)
                                                                           (list +faction-type-satanists+ +mission-faction-absent+)
                                                                           (list +faction-type-eater+ +mission-faction-present+)
                                                                           (list +faction-type-eater+ +mission-faction-absent+)
                                                                           (list +faction-type-criminals+ +mission-faction-absent+)
                                                                           (list +faction-type-ghost+ +mission-faction-absent+))))

(set-mission-district (make-instance 'mission-district :id +city-layout-corrupted-lake+
                                                       :faction-list (list (list +faction-type-civilians+ +mission-faction-absent+)
                                                                           (list +faction-type-church+ +mission-faction-absent+)
                                                                           (list +faction-type-satanists+ +mission-faction-absent+)
                                                                           (list +faction-type-eater+ +mission-faction-present+)
                                                                           (list +faction-type-eater+ +mission-faction-absent+)
                                                                           (list +faction-type-criminals+ +mission-faction-absent+)
                                                                           (list +faction-type-ghost+ +mission-faction-absent+))))

(set-mission-district (make-instance 'mission-district :id +city-layout-corrupted-lake-river+
                                                       :faction-list (list (list +faction-type-civilians+ +mission-faction-absent+)
                                                                           (list +faction-type-church+ +mission-faction-absent+)
                                                                           (list +faction-type-satanists+ +mission-faction-absent+)
                                                                           (list +faction-type-eater+ +mission-faction-present+)
                                                                           (list +faction-type-eater+ +mission-faction-absent+)
                                                                           (list +faction-type-criminals+ +mission-faction-absent+)
                                                                           (list +faction-type-ghost+ +mission-faction-absent+))))

(set-mission-district (make-instance 'mission-district :id +city-layout-corrupted-port-river+
                                                       :faction-list (list (list +faction-type-civilians+ +mission-faction-absent+)
                                                                           (list +faction-type-church+ +mission-faction-absent+)
                                                                           (list +faction-type-satanists+ +mission-faction-absent+)
                                                                           (list +faction-type-eater+ +mission-faction-present+)
                                                                           (list +faction-type-eater+ +mission-faction-absent+)
                                                                           (list +faction-type-criminals+ +mission-faction-absent+)
                                                                           (list +faction-type-ghost+ +mission-faction-absent+))))

(set-mission-district (make-instance 'mission-district :id +city-layout-corrupted-steal-normal+
                                                       :faction-list (list (list +faction-type-civilians+ +mission-faction-absent+)
                                                                           (list +faction-type-church+ +mission-faction-absent+)
                                                                           (list +faction-type-satanists+ +mission-faction-absent+)
                                                                           (list +faction-type-eater+ +mission-faction-present+)
                                                                           (list +faction-type-eater+ +mission-faction-absent+)
                                                                           (list +faction-type-criminals+ +mission-faction-absent+)
                                                                           (list +faction-type-ghost+ +mission-faction-absent+))))

(set-mission-district (make-instance 'mission-district :id +city-layout-corrupted-steal-forest+
                                                       :faction-list (list (list +faction-type-civilians+ +mission-faction-absent+)
                                                                           (list +faction-type-church+ +mission-faction-absent+)
                                                                           (list +faction-type-satanists+ +mission-faction-absent+)
                                                                           (list +faction-type-eater+ +mission-faction-present+)
                                                                           (list +faction-type-eater+ +mission-faction-absent+)
                                                                           (list +faction-type-criminals+ +mission-faction-absent+)
                                                                           (list +faction-type-ghost+ +mission-faction-absent+))))

(set-mission-district (make-instance 'mission-district :id +city-layout-corrupted-steal-port+
                                                       :faction-list (list (list +faction-type-civilians+ +mission-faction-absent+)
                                                                           (list +faction-type-church+ +mission-faction-absent+)
                                                                           (list +faction-type-satanists+ +mission-faction-absent+)
                                                                           (list +faction-type-eater+ +mission-faction-present+)
                                                                           (list +faction-type-eater+ +mission-faction-absent+)
                                                                           (list +faction-type-criminals+ +mission-faction-absent+)
                                                                           (list +faction-type-ghost+ +mission-faction-absent+))))

(set-mission-district (make-instance 'mission-district :id +city-layout-corrupted-steal-island+
                                                       :faction-list (list (list +faction-type-civilians+ +mission-faction-absent+)
                                                                           (list +faction-type-church+ +mission-faction-absent+)
                                                                           (list +faction-type-satanists+ +mission-faction-absent+)
                                                                           (list +faction-type-eater+ +mission-faction-present+)
                                                                           (list +faction-type-eater+ +mission-faction-absent+)
                                                                           (list +faction-type-criminals+ +mission-faction-absent+)
                                                                           (list +faction-type-ghost+ +mission-faction-absent+))))

(set-mission-district (make-instance 'mission-district :id +city-layout-corrupted-steal-river+
                                                       :faction-list (list (list +faction-type-civilians+ +mission-faction-absent+)
                                                                           (list +faction-type-church+ +mission-faction-absent+)
                                                                           (list +faction-type-satanists+ +mission-faction-absent+)
                                                                           (list +faction-type-eater+ +mission-faction-present+)
                                                                           (list +faction-type-eater+ +mission-faction-absent+)
                                                                           (list +faction-type-criminals+ +mission-faction-absent+)
                                                                           (list +faction-type-ghost+ +mission-faction-absent+))))

(set-mission-district (make-instance 'mission-district :id +city-layout-corrupted-steal-lake+
                                                       :faction-list (list (list +faction-type-civilians+ +mission-faction-absent+)
                                                                           (list +faction-type-church+ +mission-faction-absent+)
                                                                           (list +faction-type-satanists+ +mission-faction-absent+)
                                                                           (list +faction-type-eater+ +mission-faction-present+)
                                                                           (list +faction-type-eater+ +mission-faction-absent+)
                                                                           (list +faction-type-criminals+ +mission-faction-absent+)
                                                                           (list +faction-type-ghost+ +mission-faction-absent+))))

(set-mission-district (make-instance 'mission-district :id +city-layout-corrupted-steal-lake-river+
                                                       :faction-list (list (list +faction-type-civilians+ +mission-faction-absent+)
                                                                           (list +faction-type-church+ +mission-faction-absent+)
                                                                           (list +faction-type-satanists+ +mission-faction-absent+)
                                                                           (list +faction-type-eater+ +mission-faction-present+)
                                                                           (list +faction-type-eater+ +mission-faction-absent+)
                                                                           (list +faction-type-criminals+ +mission-faction-absent+)
                                                                           (list +faction-type-ghost+ +mission-faction-absent+))))

(set-mission-district (make-instance 'mission-district :id +city-layout-corrupted-steal-port-river+
                                                       :faction-list (list (list +faction-type-civilians+ +mission-faction-absent+)
                                                                           (list +faction-type-church+ +mission-faction-absent+)
                                                                           (list +faction-type-satanists+ +mission-faction-absent+)
                                                                           (list +faction-type-eater+ +mission-faction-present+)
                                                                           (list +faction-type-eater+ +mission-faction-absent+)
                                                                           (list +faction-type-criminals+ +mission-faction-absent+)
                                                                           (list +faction-type-ghost+ +mission-faction-absent+))))

;;----------------------------------------
;; MISSION-SCENARIOS
;;----------------------------------------

(set-mission-scenario (make-instance 'mission-scenario :id +mission-scenario-test+
                                                       :name "test"
                                                       :enabled nil
                                                       :district-layout-list ()
                                                       :faction-list ()
                                                       :scenario-faction-list ()
                                                       :objective-list (list (list +faction-type-angels+ (list +ai-package-patrol-district+)))
                                                       :win-condition-list ()
                                     ))

(set-mission-scenario (make-instance 'mission-scenario :id +mission-scenario-demon-attack+
                                                       :name "Demonic attack"
                                                       :district-layout-list (list +city-layout-normal+ +city-layout-forest+ +city-layout-port+ +city-layout-island+ +city-layout-river+ +city-layout-barricaded-city+ +city-layout-lake+
                                                                                   +city-layout-lake-river+ +city-layout-port-river+)
                                                       :faction-list (list (list +faction-type-demons+ +mission-faction-attacker+)
                                                                           (list +faction-type-military+ +mission-faction-defender+)
                                                                           (list +faction-type-military+ +mission-faction-delayed+)
                                                                           (list +faction-type-angels+ +mission-faction-defender+)
                                                                           (list +faction-type-church+ +mission-faction-absent+)
                                                                           )
                                                       :scenario-faction-list (list (list +specific-faction-type-player+ +sf-faction-demonic-attack-player+)
                                                                                    (list +specific-faction-type-dead-player+ +sf-faction-demonic-attack-dead-player+)
                                                                                    (list +specific-faction-type-angel-chrome+ +sf-faction-demonic-attack-angel-chrome+)
                                                                                    (list +specific-faction-type-angel-trinity+ +sf-faction-demonic-attack-angel-trinity+)
                                                                                    (list +specific-faction-type-demon-crimson+ +sf-faction-demonic-attack-demon-crimson+)
                                                                                    (list +specific-faction-type-demon-shadow+ +sf-faction-demonic-attack-demon-shadow+)
                                                                                    (list +specific-faction-type-demon-malseraph+ +sf-faction-demonic-attack-demon-malseraph+)
                                                                                    (list +specific-faction-type-military-chaplain+ +sf-faction-demonic-attack-military-chaplain+)
                                                                                    (list +specific-faction-type-military-scout+ +sf-faction-demonic-attack-military-scout+)
                                                                                    (list +specific-faction-type-priest+ +sf-faction-demonic-attack-priest+)
                                                                                    (list +specific-faction-type-satanist+ +sf-faction-demonic-attack-satanist+)
                                                                                    (list +specific-faction-type-eater+ +sf-faction-demonic-attack-eater+)
                                                                                    (list +specific-faction-type-skinchanger+ +sf-faction-demonic-attack-skinchanger+)
                                                                                    (list +specific-faction-type-thief+ +sf-faction-demonic-attack-thief+)
                                                                                    (list +specific-faction-type-ghost+ +sf-faction-demonic-attack-ghost+)
                                                                                    )
                                                       :objective-list (list (list +faction-type-demons+ (list +ai-package-patrol-district+))
                                                                             (list +faction-type-angels+ (list +ai-package-patrol-district+))
                                                                             (list +faction-type-military+ (list +ai-package-patrol-district+))
                                                                             (list +faction-type-church+ (list +ai-package-patrol-district+))
                                                                             (list +faction-type-satanists+ (list +ai-package-patrol-district+))
                                                                             (list +faction-type-eater+ (list +ai-package-patrol-district+))
                                                                             (list +faction-type-criminals+ (list +ai-package-patrol-district+))
                                                                             (list +faction-type-ghost+ (list +ai-package-patrol-district+))
                                                                             )
                                                       :win-condition-list (list (list +faction-type-demons+ +game-event-demon-attack-win-for-demons+)
                                                                                 (list +faction-type-angels+ +game-event-demon-attack-win-for-angels+)
                                                                                 (list +faction-type-military+ +game-event-demon-attack-win-for-military+)
                                                                                 (list +faction-type-church+ +game-event-demon-attack-win-for-church+)
                                                                                 (list +faction-type-satanists+ +game-event-demon-attack-win-for-satanists+)
                                                                                 (list +faction-type-eater+ +game-event-win-for-eater+)
                                                                                 (list +faction-type-criminals+ +game-event-win-for-thief+)
                                                                                 (list +faction-type-ghost+ +game-event-win-for-ghost+)
                                                                                 )
                                                       :angel-disguised-mob-type-id +mob-type-man+
                                     ))

(set-mission-scenario (make-instance 'mission-scenario :id +mission-scenario-demon-raid+
                                                       :name "Demonic raid"
                                                       :district-layout-list (list +city-layout-normal+ +city-layout-forest+ +city-layout-port+ +city-layout-island+ +city-layout-river+ +city-layout-barricaded-city+ +city-layout-lake+
                                                                                   +city-layout-lake-river+ +city-layout-port-river+)
                                                       :faction-list (list (list +faction-type-demons+ +mission-faction-attacker+)
                                                                           (list +faction-type-military+ +mission-faction-defender+)
                                                                           (list +faction-type-military+ +mission-faction-delayed+)
                                                                           (list +faction-type-angels+ +mission-faction-defender+)
                                                                           (list +faction-type-angels+ +mission-faction-delayed+)
                                                                           (list +faction-type-church+ +mission-faction-absent+)
                                                                           )
                                                       :scenario-faction-list (list (list +specific-faction-type-player+ +sf-faction-demonic-raid-player+)
                                                                                    (list +specific-faction-type-dead-player+ +sf-faction-demonic-raid-dead-player+)
                                                                                    (list +specific-faction-type-angel-chrome+ +sf-faction-demonic-raid-angel-chrome+)
                                                                                    (list +specific-faction-type-angel-trinity+ +sf-faction-demonic-raid-angel-trinity+)
                                                                                    (list +specific-faction-type-demon-crimson+ +sf-faction-demonic-raid-demon-crimson+)
                                                                                    (list +specific-faction-type-demon-shadow+ +sf-faction-demonic-raid-demon-shadow+)
                                                                                    (list +specific-faction-type-demon-malseraph+ +sf-faction-demonic-raid-demon-malseraph+)
                                                                                    (list +specific-faction-type-military-chaplain+ +sf-faction-demonic-raid-military-chaplain+)
                                                                                    (list +specific-faction-type-military-scout+ +sf-faction-demonic-raid-military-scout+)
                                                                                    (list +specific-faction-type-priest+ +sf-faction-demonic-raid-priest+)
                                                                                    (list +specific-faction-type-satanist+ +sf-faction-demonic-raid-satanist+)
                                                                                    (list +specific-faction-type-eater+ +sf-faction-demonic-raid-eater+)
                                                                                    (list +specific-faction-type-skinchanger+ +sf-faction-demonic-raid-skinchanger+)
                                                                                    (list +specific-faction-type-thief+ +sf-faction-demonic-raid-thief+)
                                                                                    (list +specific-faction-type-ghost+ +sf-faction-demonic-raid-ghost+)
                                                                                    )
                                                       :objective-list (list (list +faction-type-demons+ (list +ai-package-search-corpses+ +ai-package-pick-corpses+ +ai-package-return-corpses-to-portal+
                                                                                                               +ai-package-patrol-district+))
                                                                             (list +faction-type-angels+ (list +ai-package-patrol-district+))
                                                                             (list +faction-type-military+ (list +ai-package-patrol-district+))
                                                                             (list +faction-type-church+ (list +ai-package-patrol-district+))
                                                                             (list +faction-type-satanists+ (list +ai-package-search-corpses+ +ai-package-pick-corpses+ +ai-package-return-corpses-to-portal+
                                                                                                                  +ai-package-patrol-district+))
                                                                             (list +faction-type-eater+ (list +ai-package-patrol-district+))
                                                                             (list +faction-type-criminals+ (list +ai-package-patrol-district+))
                                                                             (list +faction-type-ghost+ (list +ai-package-patrol-district+))
                                                                             )
                                                       :win-condition-list (list (list +faction-type-demons+ +game-event-demon-raid-win-for-demons+)
                                                                                 (list +faction-type-angels+ +game-event-demon-raid-win-for-angels+)
                                                                                 (list +faction-type-military+ +game-event-demon-raid-win-for-military+)
                                                                                 (list +faction-type-church+ +game-event-demon-raid-win-for-church+)
                                                                                 (list +faction-type-satanists+ +game-event-demon-raid-win-for-satanists+)
                                                                                 (list +faction-type-eater+ +game-event-win-for-eater+)
                                                                                 (list +faction-type-criminals+ +game-event-win-for-thief+)
                                                                                 (list +faction-type-ghost+ +game-event-win-for-ghost+)
                                                                                 )
                                                       :post-sf-list (list +mission-sf-demonic-raid+)
                                                       :win-value-func #'(lambda ()
                                                                           (setf *demonic-raid-win-value* 200))
                                                       :angel-disguised-mob-type-id +mob-type-man+
                                     ))

(set-mission-scenario (make-instance 'mission-scenario :id +mission-scenario-demon-steal+
                                                       :name "Demonic thievery"
                                                       :district-layout-list (list +city-layout-normal+ +city-layout-forest+ +city-layout-port+ +city-layout-island+ +city-layout-river+ +city-layout-barricaded-city+ +city-layout-lake+
                                                                                   +city-layout-lake-river+ +city-layout-port-river+)
                                                       :faction-list (list (list +faction-type-demons+ +mission-faction-attacker+)
                                                                           (list +faction-type-military+ +mission-faction-defender+)
                                                                           (list +faction-type-military+ +mission-faction-delayed+)
                                                                           (list +faction-type-angels+ +mission-faction-defender+)
                                                                           (list +faction-type-angels+ +mission-faction-delayed+)
                                                                           )
                                                       :scenario-faction-list (list (list +specific-faction-type-player+ +sf-faction-demonic-steal-player+)
                                                                                    (list +specific-faction-type-dead-player+ +sf-faction-demonic-steal-dead-player+)
                                                                                    (list +specific-faction-type-angel-chrome+ +sf-faction-demonic-steal-angel-chrome+)
                                                                                    (list +specific-faction-type-angel-trinity+ +sf-faction-demonic-steal-angel-trinity+)
                                                                                    (list +specific-faction-type-demon-crimson+ +sf-faction-demonic-steal-demon-crimson+)
                                                                                    (list +specific-faction-type-demon-shadow+ +sf-faction-demonic-steal-demon-shadow+)
                                                                                    (list +specific-faction-type-demon-malseraph+ +sf-faction-demonic-steal-demon-malseraph+)
                                                                                    (list +specific-faction-type-military-chaplain+ +sf-faction-demonic-steal-military-chaplain+)
                                                                                    (list +specific-faction-type-military-scout+ +sf-faction-demonic-steal-military-scout+)
                                                                                    (list +specific-faction-type-priest+ +sf-faction-demonic-steal-priest+)
                                                                                    (list +specific-faction-type-satanist+ +sf-faction-demonic-steal-satanist+)
                                                                                    (list +specific-faction-type-eater+ +sf-faction-demonic-steal-eater+)
                                                                                    (list +specific-faction-type-skinchanger+ +sf-faction-demonic-steal-skinchanger+)
                                                                                    (list +specific-faction-type-thief+ +sf-faction-demonic-steal-thief+)
                                                                                    (list +specific-faction-type-ghost+ +sf-faction-demonic-steal-ghost+)
                                                                                    )
                                                       :objective-list (list (list +faction-type-demons+ (list +ai-package-search-relic+ +ai-package-pick-relic+ +ai-package-return-relic-to-portal+ +ai-package-patrol-district+))
                                                                             (list +faction-type-angels+ (list +ai-package-patrol-district+))
                                                                             (list +faction-type-military+ (list +ai-package-patrol-district+))
                                                                             (list +faction-type-church+ (list +ai-package-patrol-district+))
                                                                             (list +faction-type-satanists+ (list +ai-package-search-relic+ +ai-package-pick-relic+ +ai-package-return-relic-to-portal+ +ai-package-patrol-district+))
                                                                             (list +faction-type-eater+ (list +ai-package-patrol-district+))
                                                                             (list +faction-type-criminals+ (list +ai-package-patrol-district+))
                                                                             (list +faction-type-ghost+ (list +ai-package-patrol-district+))
                                                                             )
                                                       :win-condition-list (list (list +faction-type-demons+ +game-event-demon-steal-win-for-demons+)
                                                                                 (list +faction-type-angels+ +game-event-demon-steal-win-for-angels+)
                                                                                 (list +faction-type-military+ +game-event-demon-steal-win-for-military+)
                                                                                 (list +faction-type-church+ +game-event-demon-steal-win-for-church+)
                                                                                 (list +faction-type-satanists+ +game-event-demon-steal-win-for-satanists+)
                                                                                 (list +faction-type-eater+ +game-event-win-for-eater+)
                                                                                 (list +faction-type-criminals+ +game-event-win-for-thief+)
                                                                                 (list +faction-type-ghost+ +game-event-win-for-ghost+)
                                                                                 )
                                                       :post-sf-list (list +mission-sf-demonic-steal+)
                                                       :angel-disguised-mob-type-id +mob-type-man+
                                     ))

(set-mission-scenario (make-instance 'mission-scenario :id +mission-scenario-demon-conquest+
                                                       :name "Demonic conquest"
                                                       :district-layout-list (list +city-layout-normal+ +city-layout-forest+ +city-layout-port+ +city-layout-island+ +city-layout-river+ +city-layout-barricaded-city+ +city-layout-lake+
                                                                                   +city-layout-lake-river+ +city-layout-port-river+)
                                                       :faction-list (list (list +faction-type-demons+ +mission-faction-attacker+)
                                                                           (list +faction-type-military+ +mission-faction-defender+)
                                                                           (list +faction-type-military+ +mission-faction-delayed+)
                                                                           (list +faction-type-angels+ +mission-faction-defender+)
                                                                           (list +faction-type-angels+ +mission-faction-delayed+)
                                                                           (list +faction-type-church+ +mission-faction-absent+)
                                                                           )
                                                       :scenario-faction-list (list (list +specific-faction-type-player+ +sf-faction-demonic-conquest-player+)
                                                                                    (list +specific-faction-type-dead-player+ +sf-faction-demonic-conquest-dead-player+)
                                                                                    (list +specific-faction-type-angel-chrome+ +sf-faction-demonic-conquest-angel-chrome+)
                                                                                    (list +specific-faction-type-angel-trinity+ +sf-faction-demonic-conquest-angel-trinity+)
                                                                                    (list +specific-faction-type-demon-crimson+ +sf-faction-demonic-conquest-demon-crimson+)
                                                                                    (list +specific-faction-type-demon-shadow+ +sf-faction-demonic-conquest-demon-shadow+)
                                                                                    (list +specific-faction-type-demon-malseraph+ +sf-faction-demonic-conquest-demon-malseraph+)
                                                                                    (list +specific-faction-type-military-chaplain+ +sf-faction-demonic-conquest-military-chaplain+)
                                                                                    (list +specific-faction-type-military-scout+ +sf-faction-demonic-conquest-military-scout+)
                                                                                    (list +specific-faction-type-priest+ +sf-faction-demonic-conquest-priest+)
                                                                                    (list +specific-faction-type-satanist+ +sf-faction-demonic-conquest-satanist+)
                                                                                    (list +specific-faction-type-eater+ +sf-faction-demonic-conquest-eater+)
                                                                                    (list +specific-faction-type-skinchanger+ +sf-faction-demonic-conquest-skinchanger+)
                                                                                    (list +specific-faction-type-thief+ +sf-faction-demonic-conquest-thief+)
                                                                                    (list +specific-faction-type-ghost+ +sf-faction-demonic-conquest-ghost+)
                                                                                    )
                                                       :objective-list (list (list +faction-type-demons+ (list +ai-package-patrol-district+))
                                                                             (list +faction-type-angels+ (list +ai-package-patrol-district+ +ai-package-find-sigil+))
                                                                             (list +faction-type-military+ (list +ai-package-patrol-district+ +ai-package-find-sigil+))
                                                                             (list +faction-type-church+ (list +ai-package-patrol-district+ +ai-package-find-sigil+))
                                                                             (list +faction-type-satanists+ (list +ai-package-patrol-district+))
                                                                             (list +faction-type-eater+ (list +ai-package-patrol-district+))
                                                                             (list +faction-type-criminals+ (list +ai-package-patrol-district+))
                                                                             (list +faction-type-ghost+ (list +ai-package-patrol-district+))
                                                                             )
                                                       :win-condition-list (list (list +faction-type-demons+ +game-event-demon-conquest-win-for-demons+)
                                                                                 (list +faction-type-angels+ +game-event-demon-conquest-win-for-angels+)
                                                                                 (list +faction-type-military+ +game-event-demon-conquest-win-for-military+)
                                                                                 (list +faction-type-church+ +game-event-demon-conquest-win-for-church+)
                                                                                 (list +faction-type-satanists+ +game-event-demon-conquest-win-for-satanists+)
                                                                                 (list +faction-type-eater+ +game-event-win-for-eater+)
                                                                                 (list +faction-type-criminals+ +game-event-win-for-thief+)
                                                                                 (list +faction-type-ghost+ +game-event-win-for-ghost+)
                                                                                 )
                                                       :post-sf-list (list +mission-sf-demonic-steal+)
                                                       :angel-disguised-mob-type-id +mob-type-man+
                                                       ))

(set-mission-scenario (make-instance 'mission-scenario :id +mission-scenario-demon-raid-ruined+
                                                       :name "Demonic raid"
                                                       :district-layout-list (list +city-layout-ruined-normal+ +city-layout-ruined-forest+ +city-layout-ruined-port+ +city-layout-ruined-island+ +city-layout-ruined-river+
                                                                                   +city-layout-ruined-lake+ +city-layout-ruined-lake-river+ +city-layout-ruined-port-river+)
                                                       :faction-list (list (list +faction-type-demons+ +mission-faction-attacker+)
                                                                           (list +faction-type-military+ +mission-faction-defender+)
                                                                           (list +faction-type-angels+ +mission-faction-defender+)
                                                                           (list +faction-type-angels+ +mission-faction-delayed+)
                                                                           )
                                                       :scenario-faction-list (list (list +specific-faction-type-player+ +sf-faction-demonic-raid-ruined-player+)
                                                                                    (list +specific-faction-type-dead-player+ +sf-faction-demonic-raid-ruined-dead-player+)
                                                                                    (list +specific-faction-type-angel-chrome+ +sf-faction-demonic-raid-ruined-angel-chrome+)
                                                                                    (list +specific-faction-type-angel-trinity+ +sf-faction-demonic-raid-ruined-angel-trinity+)
                                                                                    (list +specific-faction-type-demon-crimson+ +sf-faction-demonic-raid-ruined-demon-crimson+)
                                                                                    (list +specific-faction-type-demon-shadow+ +sf-faction-demonic-raid-ruined-demon-shadow+)
                                                                                    (list +specific-faction-type-demon-malseraph+ +sf-faction-demonic-raid-ruined-demon-malseraph+)
                                                                                    (list +specific-faction-type-military-chaplain+ +sf-faction-demonic-raid-ruined-military-chaplain+)
                                                                                    (list +specific-faction-type-military-scout+ +sf-faction-demonic-raid-ruined-military-scout+)
                                                                                    (list +specific-faction-type-eater+ +sf-faction-demonic-raid-eater+)
                                                                                    (list +specific-faction-type-skinchanger+ +sf-faction-demonic-raid-skinchanger+)
                                                                                    )
                                                       :objective-list (list (list +faction-type-demons+ (list +ai-package-search-corpses+ +ai-package-pick-corpses+ +ai-package-return-corpses-to-portal+
                                                                                                               +ai-package-patrol-district+))
                                                                             (list +faction-type-angels+ (list +ai-package-patrol-district+))
                                                                             (list +faction-type-military+ (list +ai-package-patrol-district+))
                                                                             (list +faction-type-eater+ (list +ai-package-patrol-district+))
                                                                             )
                                                       :win-condition-list (list (list +faction-type-demons+ +game-event-demon-raid-win-for-demons+)
                                                                                 (list +faction-type-angels+ +game-event-demon-raid-win-for-angels+)
                                                                                 (list +faction-type-military+ +game-event-demon-raid-win-for-military+)
                                                                                 (list +faction-type-eater+ +game-event-win-for-eater+)
                                                                                 )
                                                       :post-sf-list (list +mission-sf-demonic-raid+
                                                                           +mission-sf-ruined-district+)
                                                       :win-value-func #'(lambda ()
                                                                           (setf *demonic-raid-win-value* 100))
                                                       :angel-disguised-mob-type-id +mob-type-soldier+
                                     ))

(set-mission-scenario (make-instance 'mission-scenario :id +mission-scenario-demon-conquest-ruined+
                                                       :name "Demonic conquest"
                                                       :district-layout-list (list +city-layout-ruined-normal+ +city-layout-ruined-forest+ +city-layout-ruined-port+ +city-layout-ruined-island+ +city-layout-ruined-river+
                                                                                   +city-layout-ruined-lake+ +city-layout-ruined-lake-river+ +city-layout-ruined-port-river+)
                                                       :faction-list (list (list +faction-type-demons+ +mission-faction-attacker+)
                                                                           (list +faction-type-military+ +mission-faction-defender+)
                                                                           (list +faction-type-military+ +mission-faction-delayed+)
                                                                           (list +faction-type-military+ +mission-faction-absent+)
                                                                           (list +faction-type-angels+ +mission-faction-defender+)
                                                                           (list +faction-type-angels+ +mission-faction-delayed+)
                                                                           )
                                                       :scenario-faction-list (list (list +specific-faction-type-player+ +sf-faction-demonic-conquest-ruined-player+)
                                                                                    (list +specific-faction-type-dead-player+ +sf-faction-demonic-conquest-ruined-dead-player+)
                                                                                    (list +specific-faction-type-angel-chrome+ +sf-faction-demonic-conquest-ruined-angel-chrome+)
                                                                                    (list +specific-faction-type-angel-trinity+ +sf-faction-demonic-conquest-ruined-angel-trinity+)
                                                                                    (list +specific-faction-type-demon-crimson+ +sf-faction-demonic-conquest-ruined-demon-crimson+)
                                                                                    (list +specific-faction-type-demon-shadow+ +sf-faction-demonic-conquest-ruined-demon-shadow+)
                                                                                    (list +specific-faction-type-demon-malseraph+ +sf-faction-demonic-conquest-ruined-demon-malseraph+)
                                                                                    (list +specific-faction-type-military-chaplain+ +sf-faction-demonic-conquest-ruined-military-chaplain+)
                                                                                    (list +specific-faction-type-military-scout+ +sf-faction-demonic-conquest-ruined-military-scout+)
                                                                                    (list +specific-faction-type-eater+ +sf-faction-demonic-conquest-ruined-eater+)
                                                                                    (list +specific-faction-type-skinchanger+ +sf-faction-demonic-conquest-ruined-skinchanger+)
                                                                                    )
                                                       :objective-list (list (list +faction-type-demons+ (list +ai-package-patrol-district+))
                                                                             (list +faction-type-angels+ (list +ai-package-patrol-district+ +ai-package-find-sigil+))
                                                                             (list +faction-type-military+ (list +ai-package-patrol-district+ +ai-package-find-sigil+))
                                                                             (list +faction-type-eater+ (list +ai-package-patrol-district+))
                                                                             )
                                                       :win-condition-list (list (list +faction-type-demons+ +game-event-demon-conquest-win-for-demons+)
                                                                                 (list +faction-type-angels+ +game-event-demon-conquest-win-for-angels+)
                                                                                 (list +faction-type-military+ +game-event-demon-conquest-win-for-military+)
                                                                                 (list +faction-type-eater+ +game-event-win-for-eater+)
                                                                                 )
                                                       :post-sf-list (list +mission-sf-demonic-steal+
                                                                           +mission-sf-ruined-district+)
                                                       :angel-disguised-mob-type-id +mob-type-soldier+
                                                       ))

(set-mission-scenario (make-instance 'mission-scenario :id +mission-scenario-military-conquest-ruined+
                                                       :name "Military conquest"
                                                       :district-layout-list (list +city-layout-ruined-normal+ +city-layout-ruined-forest+ +city-layout-ruined-port+ +city-layout-ruined-island+ +city-layout-ruined-river+
                                                                                   +city-layout-ruined-lake+ +city-layout-ruined-lake-river+ +city-layout-ruined-port-river+)
                                                       :faction-list (list (list +faction-type-military+ +mission-faction-attacker+)
                                                                           (list +faction-type-demons+ +mission-faction-defender+)
                                                                           (list +faction-type-angels+ +mission-faction-delayed+)
                                                                           )
                                                       :scenario-faction-list (list (list +specific-faction-type-player+ +sf-faction-military-conquest-ruined-player+)
                                                                                    (list +specific-faction-type-dead-player+ +sf-faction-military-conquest-ruined-dead-player+)
                                                                                    (list +specific-faction-type-angel-chrome+ +sf-faction-military-conquest-ruined-angel-chrome+)
                                                                                    (list +specific-faction-type-angel-trinity+ +sf-faction-military-conquest-ruined-angel-trinity+)
                                                                                    (list +specific-faction-type-demon-crimson+ +sf-faction-military-conquest-ruined-demon-crimson+)
                                                                                    (list +specific-faction-type-demon-shadow+ +sf-faction-military-conquest-ruined-demon-shadow+)
                                                                                    (list +specific-faction-type-demon-malseraph+ +sf-faction-military-conquest-ruined-demon-malseraph+)
                                                                                    (list +specific-faction-type-military-chaplain+ +sf-faction-military-conquest-ruined-military-chaplain+)
                                                                                    (list +specific-faction-type-military-scout+ +sf-faction-military-conquest-ruined-military-scout+)
                                                                                    (list +specific-faction-type-eater+ +sf-faction-military-conquest-ruined-eater+)
                                                                                    (list +specific-faction-type-skinchanger+ +sf-faction-military-conquest-ruined-skinchanger+)
                                                                                    )
                                                       :objective-list (list (list +faction-type-demons+ (list +ai-package-patrol-district+))
                                                                             (list +faction-type-angels+ (list +ai-package-patrol-district+ +ai-package-find-sigil+))
                                                                             (list +faction-type-military+ (list +ai-package-patrol-district+ +ai-package-find-sigil+))
                                                                             (list +faction-type-eater+ (list +ai-package-patrol-district+))
                                                                             )
                                                       :win-condition-list (list (list +faction-type-demons+ +game-event-military-conquest-win-for-demons+)
                                                                                 (list +faction-type-angels+ +game-event-military-conquest-win-for-angels+)
                                                                                 (list +faction-type-military+ +game-event-military-conquest-win-for-military+)
                                                                                 (list +faction-type-eater+ +game-event-win-for-eater+)
                                                                                 )
                                                       :post-sf-list (list +mission-sf-ruined-district+)
                                                       :angel-disguised-mob-type-id +mob-type-soldier+
                                     ))

(set-mission-scenario (make-instance 'mission-scenario :id +mission-scenario-military-raid-ruined+
                                                       :name "Military raid"
                                                       :district-layout-list (list +city-layout-ruined-normal+ +city-layout-ruined-forest+ +city-layout-ruined-port+ +city-layout-ruined-island+ +city-layout-ruined-river+
                                                                                   +city-layout-ruined-lake+ +city-layout-ruined-lake-river+ +city-layout-ruined-port-river+)
                                                       :faction-list (list (list +faction-type-military+ +mission-faction-attacker+)
                                                                           (list +faction-type-demons+ +mission-faction-attacker+)
                                                                           (list +faction-type-angels+ +mission-faction-delayed+)
                                                                           )
                                                       :scenario-faction-list (list (list +specific-faction-type-player+ +sf-faction-military-raid-ruined-player+)
                                                                                    (list +specific-faction-type-dead-player+ +sf-faction-military-raid-ruined-dead-player+)
                                                                                    (list +specific-faction-type-angel-chrome+ +sf-faction-military-raid-ruined-angel-chrome+)
                                                                                    (list +specific-faction-type-angel-trinity+ +sf-faction-military-raid-ruined-angel-trinity+)
                                                                                    (list +specific-faction-type-demon-crimson+ +sf-faction-military-raid-ruined-demon-crimson+)
                                                                                    (list +specific-faction-type-demon-shadow+ +sf-faction-military-raid-ruined-demon-shadow+)
                                                                                    (list +specific-faction-type-demon-malseraph+ +sf-faction-military-raid-ruined-demon-malseraph+)
                                                                                    (list +specific-faction-type-military-chaplain+ +sf-faction-military-raid-ruined-military-chaplain+)
                                                                                    (list +specific-faction-type-military-scout+ +sf-faction-military-raid-ruined-military-scout+)
                                                                                    (list +specific-faction-type-eater+ +sf-faction-military-raid-ruined-eater+)
                                                                                    (list +specific-faction-type-skinchanger+ +sf-faction-military-raid-ruined-skinchanger+)
                                                                                    )
                                                       :objective-list (list (list +faction-type-demons+ (list +ai-package-patrol-district+))
                                                                             (list +faction-type-angels+ (list +ai-package-patrol-district+))
                                                                             (list +faction-type-military+ (list +ai-package-patrol-district+))
                                                                             (list +faction-type-eater+ (list +ai-package-patrol-district+))
                                                                             )
                                                       :win-condition-list (list (list +faction-type-demons+ +game-event-military-raid-win-for-demons+)
                                                                                 (list +faction-type-angels+ +game-event-military-raid-win-for-angels+)
                                                                                 (list +faction-type-military+ +game-event-military-raid-win-for-military+)
                                                                                 (list +faction-type-eater+ +game-event-win-for-eater+)
                                                                                 )
                                                       :post-sf-list (list +mission-sf-ruined-district+)
                                                       :angel-disguised-mob-type-id +mob-type-soldier+
                                                       ))

(set-mission-scenario (make-instance 'mission-scenario :id +mission-scenario-demon-conquest-corrupted+
                                                       :name "Demonic conquest"
                                                       :district-layout-list (list +city-layout-corrupted-normal+ +city-layout-corrupted-forest+ +city-layout-corrupted-port+ +city-layout-corrupted-island+ +city-layout-corrupted-river+
                                                                                   +city-layout-corrupted-lake+ +city-layout-corrupted-lake-river+ +city-layout-corrupted-port-river+)
                                                       :faction-list (list (list +faction-type-demons+ +mission-faction-attacker+)
                                                                           (list +faction-type-military+ +mission-faction-defender+)
                                                                           (list +faction-type-military+ +mission-faction-delayed+)
                                                                           (list +faction-type-military+ +mission-faction-absent+)
                                                                           (list +faction-type-angels+ +mission-faction-defender+)
                                                                           (list +faction-type-angels+ +mission-faction-delayed+)
                                                                           )
                                                       :scenario-faction-list (list (list +specific-faction-type-player+ +sf-faction-demonic-conquest-corrupted-player+)
                                                                                    (list +specific-faction-type-dead-player+ +sf-faction-demonic-conquest-corrupted-dead-player+)
                                                                                    (list +specific-faction-type-angel-chrome+ +sf-faction-demonic-conquest-corrupted-angel-chrome+)
                                                                                    (list +specific-faction-type-angel-trinity+ +sf-faction-demonic-conquest-corrupted-angel-trinity+)
                                                                                    (list +specific-faction-type-demon-crimson+ +sf-faction-demonic-conquest-corrupted-demon-crimson+)
                                                                                    (list +specific-faction-type-demon-shadow+ +sf-faction-demonic-conquest-corrupted-demon-shadow+)
                                                                                    (list +specific-faction-type-demon-malseraph+ +sf-faction-demonic-conquest-corrupted-demon-malseraph+)
                                                                                    (list +specific-faction-type-military-chaplain+ +sf-faction-demonic-conquest-corrupted-military-chaplain+)
                                                                                    (list +specific-faction-type-military-scout+ +sf-faction-demonic-conquest-corrupted-military-scout+)
                                                                                    (list +specific-faction-type-eater+ +sf-faction-demonic-conquest-corrupted-eater+)
                                                                                    (list +specific-faction-type-skinchanger+ +sf-faction-demonic-conquest-corrupted-skinchanger+)
                                                                                    )
                                                       :objective-list (list (list +faction-type-demons+ (list +ai-package-patrol-district+))
                                                                             (list +faction-type-angels+ (list +ai-package-patrol-district+ +ai-package-find-sigil+))
                                                                             (list +faction-type-military+ (list +ai-package-patrol-district+ +ai-package-find-sigil+))
                                                                             (list +faction-type-eater+ (list +ai-package-patrol-district+))
                                                                             )
                                                       :win-condition-list (list (list +faction-type-demons+ +game-event-demon-conquest-win-for-demons+)
                                                                                 (list +faction-type-angels+ +game-event-demon-conquest-win-for-angels+)
                                                                                 (list +faction-type-military+ +game-event-demon-conquest-win-for-military+)
                                                                                 (list +faction-type-eater+ +game-event-win-for-eater+)
                                                                                 )
                                                       :post-sf-list (list +mission-sf-demonic-steal+
                                                                           +mission-sf-ruined-district+
                                                                           +mission-sf-irradiated-district+)
                                                       :angel-disguised-mob-type-id +mob-type-soldier+
                                                       ))

(set-mission-scenario (make-instance 'mission-scenario :id +mission-scenario-military-conquest-corrupted+
                                                       :name "Military conquest"
                                                       :district-layout-list (list +city-layout-corrupted-normal+ +city-layout-corrupted-forest+ +city-layout-corrupted-port+ +city-layout-corrupted-island+ +city-layout-corrupted-river+
                                                                                   +city-layout-corrupted-lake+ +city-layout-corrupted-lake-river+ +city-layout-corrupted-port-river+)
                                                       :faction-list (list (list +faction-type-military+ +mission-faction-attacker+)
                                                                           (list +faction-type-demons+ +mission-faction-defender+)
                                                                           (list +faction-type-angels+ +mission-faction-delayed+)
                                                                           )
                                                       :scenario-faction-list (list (list +specific-faction-type-player+ +sf-faction-military-conquest-corrupted-player+)
                                                                                    (list +specific-faction-type-dead-player+ +sf-faction-military-conquest-corrupted-dead-player+)
                                                                                    (list +specific-faction-type-angel-chrome+ +sf-faction-military-conquest-corrupted-angel-chrome+)
                                                                                    (list +specific-faction-type-angel-trinity+ +sf-faction-military-conquest-corrupted-angel-trinity+)
                                                                                    (list +specific-faction-type-demon-crimson+ +sf-faction-military-conquest-corrupted-demon-crimson+)
                                                                                    (list +specific-faction-type-demon-shadow+ +sf-faction-military-conquest-corrupted-demon-shadow+)
                                                                                    (list +specific-faction-type-demon-malseraph+ +sf-faction-military-conquest-corrupted-demon-malseraph+)
                                                                                    (list +specific-faction-type-military-chaplain+ +sf-faction-military-conquest-corrupted-military-chaplain+)
                                                                                    (list +specific-faction-type-military-scout+ +sf-faction-military-conquest-corrupted-military-scout+)
                                                                                    (list +specific-faction-type-eater+ +sf-faction-military-conquest-corrupted-eater+)
                                                                                    (list +specific-faction-type-skinchanger+ +sf-faction-military-conquest-corrupted-skinchanger+)
                                                                                    )
                                                       :objective-list (list (list +faction-type-demons+ (list +ai-package-patrol-district+))
                                                                             (list +faction-type-angels+ (list +ai-package-patrol-district+ +ai-package-find-sigil+))
                                                                             (list +faction-type-military+ (list +ai-package-patrol-district+ +ai-package-find-sigil+))
                                                                             (list +faction-type-eater+ (list +ai-package-patrol-district+))
                                                                             )
                                                       :win-condition-list (list (list +faction-type-demons+ +game-event-military-conquest-win-for-demons+)
                                                                                 (list +faction-type-angels+ +game-event-military-conquest-win-for-angels+)
                                                                                 (list +faction-type-military+ +game-event-military-conquest-win-for-military+)
                                                                                 (list +faction-type-eater+ +game-event-win-for-eater+)
                                                                                 )
                                                       :post-sf-list (list +mission-sf-ruined-district+ +mission-sf-irradiated-district+)
                                                       :angel-disguised-mob-type-id +mob-type-soldier+
                                     ))

(set-mission-scenario (make-instance 'mission-scenario :id +mission-scenario-angelic-conquest-corrupted+
                                                       :name "Celestial purge"
                                                       :district-layout-list (list +city-layout-corrupted-normal+ +city-layout-corrupted-forest+ +city-layout-corrupted-port+ +city-layout-corrupted-island+ +city-layout-corrupted-river+
                                                                                   +city-layout-corrupted-lake+ +city-layout-corrupted-lake-river+ +city-layout-corrupted-port-river+)
                                                       :faction-list (list (list +faction-type-military+ +mission-faction-delayed+)
                                                                           (list +faction-type-military+ +mission-faction-absent+)
                                                                           (list +faction-type-demons+ +mission-faction-defender+)
                                                                           (list +faction-type-angels+ +mission-faction-attacker+)
                                                                           )
                                                       :scenario-faction-list (list (list +specific-faction-type-player+ +sf-faction-angelic-conquest-corrupted-player+)
                                                                                    (list +specific-faction-type-dead-player+ +sf-faction-angelic-conquest-corrupted-dead-player+)
                                                                                    (list +specific-faction-type-angel-chrome+ +sf-faction-angelic-conquest-corrupted-angel-chrome+)
                                                                                    (list +specific-faction-type-angel-trinity+ +sf-faction-angelic-conquest-corrupted-angel-trinity+)
                                                                                    (list +specific-faction-type-demon-crimson+ +sf-faction-angelic-conquest-corrupted-demon-crimson+)
                                                                                    (list +specific-faction-type-demon-shadow+ +sf-faction-angelic-conquest-corrupted-demon-shadow+)
                                                                                    (list +specific-faction-type-demon-malseraph+ +sf-faction-angelic-conquest-corrupted-demon-malseraph+)
                                                                                    (list +specific-faction-type-military-chaplain+ +sf-faction-angelic-conquest-corrupted-military-chaplain+)
                                                                                    (list +specific-faction-type-military-scout+ +sf-faction-angelic-conquest-corrupted-military-scout+)
                                                                                    (list +specific-faction-type-eater+ +sf-faction-angelic-conquest-corrupted-eater+)
                                                                                    (list +specific-faction-type-skinchanger+ +sf-faction-angelic-conquest-corrupted-skinchanger+)
                                                                                    )
                                                       :objective-list (list (list +faction-type-demons+ (list +ai-package-patrol-district+))
                                                                             (list +faction-type-angels+ (list +ai-package-patrol-district+ +ai-package-find-sigil+))
                                                                             (list +faction-type-military+ (list +ai-package-patrol-district+ +ai-package-find-sigil+))
                                                                             (list +faction-type-eater+ (list +ai-package-patrol-district+))
                                                                             )
                                                       :win-condition-list (list (list +faction-type-demons+ +game-event-military-conquest-win-for-demons+)
                                                                                 (list +faction-type-angels+ +game-event-military-conquest-win-for-angels+)
                                                                                 (list +faction-type-military+ +game-event-military-conquest-win-for-military+)
                                                                                 (list +faction-type-eater+ +game-event-win-for-eater+)
                                                                                 )
                                                       :post-sf-list (list +mission-sf-ruined-district+ +mission-sf-irradiated-district+)
                                                       :angel-disguised-mob-type-id +mob-type-soldier+
                                     ))

(set-mission-scenario (make-instance 'mission-scenario :id +mission-scenario-angelic-steal-corrupted+
                                                       :name "Celestial retrieval"
                                                       :district-layout-list (list +city-layout-corrupted-steal-normal+ +city-layout-corrupted-steal-forest+ +city-layout-corrupted-steal-port+ +city-layout-corrupted-steal-island+
                                                                                   +city-layout-corrupted-steal-river+ +city-layout-corrupted-steal-lake+ +city-layout-corrupted-steal-lake-river+
                                                                                   +city-layout-corrupted-steal-port-river+)
                                                       :faction-list (list (list +faction-type-demons+ +mission-faction-present+)
                                                                           (list +faction-type-angels+ +mission-faction-attacker+)
                                                                           )
                                                       :scenario-faction-list (list (list +specific-faction-type-player+ +sf-faction-angelic-steal-player+)
                                                                                    (list +specific-faction-type-dead-player+ +sf-faction-angelic-steal-dead-player+)
                                                                                    (list +specific-faction-type-angel-chrome+ +sf-faction-angelic-steal-angel-chrome+)
                                                                                    (list +specific-faction-type-angel-trinity+ +sf-faction-angelic-steal-angel-trinity+)
                                                                                    (list +specific-faction-type-demon-crimson+ +sf-faction-angelic-steal-demon-crimson+)
                                                                                    (list +specific-faction-type-demon-shadow+ +sf-faction-angelic-steal-demon-shadow+)
                                                                                    (list +specific-faction-type-demon-malseraph+ +sf-faction-angelic-steal-demon-malseraph+)
                                                                                    (list +specific-faction-type-eater+ +sf-faction-angelic-steal-eater+)
                                                                                    (list +specific-faction-type-skinchanger+ +sf-faction-angelic-steal-skinchanger+)
                                                                                    )
                                                       :objective-list (list (list +faction-type-demons+ (list +ai-package-patrol-district+))
                                                                             (list +faction-type-angels+ (list +ai-package-patrol-district+ +ai-package-search-relic+ +ai-package-pick-relic+ +ai-package-escape-with-relic+))
                                                                             (list +faction-type-eater+ (list +ai-package-patrol-district+))
                                                                             )
                                                       :win-condition-list (list (list +faction-type-demons+ +game-event-angelic-steal-win-for-demons+)
                                                                                 (list +faction-type-angels+ +game-event-angelic-steal-win-for-angels+)
                                                                                 (list +faction-type-eater+ +game-event-win-for-eater+)
                                                                                 )
                                                       :post-sf-list (list +mission-sf-ruined-district+ +mission-sf-irradiated-district+)
                                                       :angel-disguised-mob-type-id +mob-type-soldier+
                                     ))
